{"version":3,"sources":["app/logo.svg","services/http-service.js","services/notification-service.js","services/data-service.js","product/product.js","product-condensed/product-condensed.js","wishlist/wishlist.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HttpService","getProducts","Promise","resolve","reject","fetch","then","res","json","observers","instance","NotificationService","Object","classCallCheck","this","postNotification","notifName","data","obs","x","length","callBack","addObserver","observer","obj","push","removeObserver","splice","ns","wishList","DataService","isItemOnWishList","item","_id","addWishListItem","removeWishListItem","ds","Product","props","_this","possibleConstructorReturn","getPrototypeOf","call","onButtonClicked","state","onWishList","product","onButtonsClicked","bind","assertThisInitialized","onWishListChanged","NOTIF_WISHLIST_CHANGED","newWishList","setState","btnClass","_this2","react_default","a","createElement","className","src","imgUrl","alt","title","price","href","onClick","Component","ProductCondensed","removeProduct","WishList","createWishList","map","product_condensed_product_condensed","key","http","App","loadData","self","products","err","productList","src_product_product","class","wishlist_wishlist","Boolean","window","location","hostname","match","ReactDOM","render","src_app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7d0c6d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import 'whatwg-fetch';\r\nimport { reject } from 'q';\r\n\r\n//encapsulates the getProducts service.\r\nclass HttpService {\r\n    getProducts = () => {\r\n        var promise = new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3003/product')\r\n            .then(res => {\r\n                //console.log(res.json());\r\n                resolve(res.json());\r\n            })\r\n        });\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport default HttpService;","//Notification system implemented using oberserver pattern\r\nexport const NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\r\n\r\nvar observers = {};\r\nlet instance = null;\r\n\r\n\r\nclass NotificationService {\r\n    constructor() {\r\n        if (!instance) {\r\n            instance = this;\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    postNotification = (notifName, data) => {\r\n        let obs = observers[notifName];\r\n        for (var x = 0; x < obs.length; x++) {\r\n            var obj = obs[x];\r\n            obj.callBack(data);\r\n        }\r\n    }\r\n    \r\n    addObserver = (notifName, observer, callBack) => {\r\n        let obs = observers[notifName];\r\n\r\n        if (!obs) {\r\n            observers[notifName] = [];\r\n        }\r\n\r\n        let obj = {observer: observer, callBack: callBack};\r\n        observers[notifName].push(obj);\r\n    }\r\n\r\n    removeObserver = (observer, notifName) => {\r\n        var obs = observers[notifName];\r\n\r\n        if (obs) {\r\n            for (var x = 0; x < obs.length; x++) {\r\n                if (observer === obs[x].observer) {\r\n                    obs.splice(x,1);\r\n                    observer[notifName] = obs;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default NotificationService;","import NotificationService, {NOTIF_WISHLIST_CHANGED} from './notification-service';\r\n\r\nlet ns = new NotificationService();\r\n//instance used too store the only instance of DataService.\r\nlet instance = null;\r\n//data for items in the wishlist.\r\nvar wishList = [];\r\n\r\n//Singleton class\r\nclass DataService {\r\n    constructor() {\r\n        if (!instance) {\r\n            instance = this;\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    isItemOnWishList = (item) => {\r\n        for (var x = 0; x < wishList.length; x++) {\r\n            if (wishList[x]._id === item._id) {\r\n                return true;\r\n            }\r\n         }\r\n         return false;\r\n    }\r\n\r\n    addWishListItem = item => {\r\n        wishList.push(item);\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n    }\r\n\r\n    removeWishListItem = item => {\r\n        for (var x = 0; x < wishList.length; x++){\r\n            if (wishList[x]._id === item._id) {\r\n                wishList.splice(x, 1);\r\n                ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataService;","import React, {Component} from 'react';\r\nimport './product.css';\r\nimport DataService from '../services/data-service';\r\nimport NotificationService, {NOTIF_WISHLIST_CHANGED} from '../services/notification-service';\r\n\r\nlet ds = new DataService();\r\nlet ns = new NotificationService();\r\n\r\n//Class to represent product information.\r\nclass Product extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {onWishList: ds.isItemOnWishList()};\r\n\r\n        //Bind Functions\r\n        this.onButtonsClicked = this.onButtonClicked.bind(this);\r\n        this.onWishListChanged = this.onWishListChanged.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n\r\n    //runs remove observer code when component unmounts to app.\r\n    componentWillUnmount() {\r\n        ns.removeObserver(this. NOTIF_WISHLIST_CHANGED);\r\n    }\r\n\r\n    onWishListChanged(newWishList) {\r\n        this.setState({onWishList: ds.isItemOnWishList(this.props.product)});\r\n    }\r\n\r\n    onButtonClicked = () => {\r\n        if (this.state.onWishList) {\r\n            ds.removeWishListItem(this.props.product);\r\n        }\r\n        else {\r\n            ds.addWishListItem(this.props.product);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var btnClass;\r\n        if (this.state.onWishList) {\r\n            btnClass = \"btn btn-danger\";\r\n        }\r\n        else {\r\n            btnClass = \"btn btn-primary\";\r\n        }\r\n\r\n        return(\r\n            <div className=\"card product\">\r\n                <img className=\"card-img-top\" src={this.props.product.imgUrl} alt=\"Product\"></img>\r\n                <div className=\"card-block\">\r\n                    <h4 className=\"card-title\" >{this.props.product.title}</h4>\r\n                    <p className=\"card-text\" >Price: ${this.props.product.price}</p>\r\n                    <a href=\"#\" onClick={() => this.onButtonClicked()} className={btnClass}>\r\n                    {this.state.onWishList ? \"Remove From Wishlist\" : \"Add To Wishlist\"}</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;","import React, {Component} from 'react';\r\nimport './product-condensed.css';\r\nimport DataService from '../services/data-service';\r\n\r\nvar ds = new DataService();\r\n//Class to represent product information.\r\nclass ProductCondensed extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        //bind\r\n        this.removeProduct = this.removeProduct.bind(this);\r\n    }\r\n\r\n    removeProduct = () => {\r\n        ds.removeWishListItem(this.props.product);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <li className=\"list-group-item pc-condensed\">\r\n                <a className=\"btn btn-outline-danger float-left\" onClick={() => this.removeProduct()}>X</a>\r\n                <p className=\"d-inline float-left\">{this.props.product.title} | <b>${this.props.product.price}</b></p>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductCondensed;","import React, {Component} from 'react';\r\nimport './wishlist.css';\r\nimport ProductCondensed from '../product-condensed/product-condensed';\r\nimport DataService from '../services/data-service';\r\nimport NotificationService, {NOTIF_WISHLIST_CHANGED} from '../services/notification-service';\r\n\r\nlet ns = new NotificationService();\r\n//Class to represent wishlist information.\r\nclass WishList extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {wishList:[]};\r\n        //bind functions\r\n        this.createWishList = this.createWishList.bind(this);\r\n        this. onWishListChanged = this. onWishListChanged.bind(this);\r\n    }\r\n    //runs add observer code when component mounts to app.\r\n    componentDidMount() {\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n    //runs remove observer code when component unmounts to app.\r\n    componentWillUnmount() {\r\n        ns.removeObserver(this. NOTIF_WISHLIST_CHANGED);\r\n    }\r\n\r\n    onWishListChanged(newWishList) {\r\n        //refresh wishlist\r\n        this.setState({wishList: newWishList});\r\n    }\r\n\r\n    createWishList = () => {\r\n        const list = this.state.wishList.map((product) =>\r\n        <ProductCondensed product={product} key={product._id} />\r\n        );\r\n\r\n        return (list);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card mb-1\">\r\n                <div className='card-block'>\r\n                    <h4 className=\"card-title\">Wish List</h4>\r\n                    <ul className=\"list-group\">\r\n                        {this.createWishList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WishList;","/* To run api:\r\n* cd ../shop-api\r\n* mongod\r\n* nodemon server.js\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport HttpService from '../services/http-service';\r\n//Components\r\nimport Product from '../product/product';\r\nimport WishList from '../wishlist/wishlist';\r\n\r\nconst http = new HttpService();\r\n\r\nclass App extends Component {\r\n  //react constructor\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {products:[]};\r\n\r\n    //binds function\r\n    this.loadData = this.loadData.bind(this);\r\n    this.productList = this.productList.bind(this);\r\n    this.loadData();\r\n  }\r\n\r\n  //loads data from api\r\n  loadData = () => {\r\n    //can't use this in a promise.\r\n    var self = this;\r\n    http.getProducts().then((data) =>{\r\n      //setState reloads the entire component\r\n      self.setState({products: data});\r\n      //console.log(products);\r\n    }, (err) => { });\r\n  }\r\n\r\n  //loads data from api into product components.\r\n  productList = () => {\r\n    const list = this.state.products.map((product) =>\r\n      <div className=\"col-lg-4 col-md-6 col-sm-12\" key={product._id}>\r\n        <Product product={product}/>\r\n      </div>\r\n    );\r\n\r\n    return (list);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n     \r\n        <nav class=\"navbar navbar-dark bg-dark\">\r\n          <a class=\"navbar-brand\" href=\"#\">Welcome to The Hobby Shop</a>\r\n        </nav>\r\n        <div className=\"container-fluid App-main\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 col-sm-6\">\r\n              <div className=\"row\">\r\n                {this.productList()}\r\n              </div>  \r\n            </div>\r\n            <div className=\"col-md-4 col-sm-6\">\r\n              <div className=\"sticky-top\">\r\n                <WishList />\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}